name: Default pipeline

on:
  push:
    branches:
      - '*'
  workflow_dispatch:
  pull_request:
    branches:
      - '*'

permissions:
  contents: write

jobs:
  setup:
    name: Setup environment and install dependencies
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Cache Magic installation
        uses: actions/cache@v3
        with:
          path: ~/.modular
          key: ${{ runner.os }}-magic-${{ hashFiles('**/lockfiles') }}

      - name: Install Magic
        run: |
          if [ ! -d ~/.modular ]; then
            curl -ssL https://magic.modular.com | bash
          fi
          source $HOME/.bash_profile

  test:
    name: Run tests
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Restore Magic installation
        uses: actions/cache@v3
        with:
          path: ~/.modular
          key: ${{ runner.os }}-magic-${{ hashFiles('**/lockfiles') }}

      - name: Setup Magic PATH
        run: |
          source $HOME/.bash_profile

      - name: Run the test suite
        run: magic run mojo run_tests.mojo
  
  package:
    name: Create package
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Restore Magic installation
        uses: actions/cache@v3
        with:
          path: ~/.modular
          key: ${{ runner.os }}-magic-${{ hashFiles('**/lockfiles') }}

      - name: Setup Magic PATH
        run: |
          source $HOME/.bash_profile

      - name: Run the package command
        run: magic run mojo package lightbug_http -o lightbug_http.mojopkg

      - name: Upload package to release
        uses: svenstaro/upload-release-action@v2
        with:
          file: lightbug_http.mojopkg
          tag: latest-build
          overwrite: true
